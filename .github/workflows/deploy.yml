name: Deploy to Google Kubernetes Engine

on:
  push:
    branches:
      - master  

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
    
      PROJECT_ID: primeval-creek-424606   
      IMAGE_NAME: my-python-app           
      DEPLOYMENT_NAME: my-python-app     
      CONTAINER_NAME: my-python-app-container  
      ZONE: me-central1-a                
      CLUSTER_NAME: app-cluster           

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ env.PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}  

    - name: Authenticate Docker to Google Container Registry
      run: |
         echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > /tmp/keyfile.json
         gcloud auth activate-service-account --key-file=/tmp/keyfile.json
         gcloud auth configure-docker gcr.io
    - name: Build and Push Docker Image
      run: |
        echo "${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}" | base64 --decode > /tmp/keyfile.json
        gcloud auth activate-service-account --key-file=/tmp/keyfile.json
        gcloud auth configure-docker
        docker build -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-python-app:latest .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/my-python-app:latest

    - name: Set up Kubernetes with GKE
      run: |
        gcloud container clusters get-credentials ${{ env.CLUSTER_NAME }} --zone ${{ env.ZONE }} --project ${{ env.PROJECT_ID }}

    - name: Deploy to GKE
      run: |
        kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} ${{ env.CONTAINER_NAME }}=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
